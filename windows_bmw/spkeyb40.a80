;	TITLE	KEYBOARD
; Keyboard driver
; Based on ASC CP/M keyboard driver
; (c) Andrew Sendetski ASC &
;     Alexander Shafir ASH
; 15.Apr.1993
;
; Stripped of CP/M-specific functions
; and KOI7/KOI8 support
; by Michael Borisov 13.12.2018

	module	spkeyb

KDREBE	EQU	3	;5 BAD, 3 NICE

LENBUF	EQU	40

REPDEL	EQU	30
REPPER	EQU	4

SYSKEY	EQU	0	;40-key standard keyboard
	;use 1 for 58-key Spectrum+2 keyboard

CST:	LD	HL,(ULBUF)
	LD	A,L
	CP	H
	LD	A,0
	RET	Z
	CPL
	RET

CONIN	EI
CONIN0	CALL	CST
CONIN2	JR	Z,CONIN0
	DI
	LD	A,L
	INC	A
	CP	LENBUF-1
	JR	NZ,CONIN1
	XOR	A
CONIN1	LD	(ULBUF),A
	LD	DE,BUFKLA
	LD	H,0
	ADD	HL,DE
	LD	A,(HL)
	EI
	RET

CONINW	EI
	CALL	CST
	RET	Z	;no wait key code in bufer
	JR	CONIN2

;CPS-..	A-38	Q-37	1-36	0-35	P-34	ENT-33	SPC-32
;Z-31	S-30	W-29	2-28	9-27	O-26	L-25	SYMB-..
;X-23	D-22	E-21	3-20	8-19	I-18	K-17	M-16
;C-15	F-14	R-13	4-12	7-11	U-10	J-9	N-8
;V-7	G-6	T-5	5-4	6-3	Y-2	H-1	B-0

TBL_SC:	DEFB	00,33,25,00,17,00,00,00
	DEFB	09,00,00,00,00,00,00,00
	DEFB	01,00,00,00,00,00,00,00
	DEFB	00,00,00,00,00,00,00,00

INK_01:	BIT	7,E
	JR	Z,INK_03
	LD	(INK_02+2),A
INK_02:	LD	A,(IX+0)
	OR	A
	JR	Z,INK_03
	ADD	A,H
	LD	E,A
	RET

INK_03:	POP	BC
	RET		;>2 KEYS PRESED

INTKEY:	LD	E,0FFH	;FLAG
	LD	BC,000FEH
	IN	A,(C)
	CPL
	AND	00011111B
	JR	Z,INK_04

	LD	IX,TBL_SC
	LD	B,0FEH
	IN	A,(C)
	CPL
	LD	L,A
	AND	00000001B
	LD	H,A

	LD	B,07FH
	IN	A,(C)
	CPL
	LD	D,A
	AND	00000010B
	OR	H
	LD	(KEYSHT),A

	LD	H,7
	LD	A,L
	AND	00011110B
	CALL	NZ,INK_01
	DEC	H

	LD	L,00011111B
	LD	B,0FDH
INK_05:	IN	A,(C)
	CPL
	AND	L
	CALL	NZ,INK_01
	RLC	B
	DEC	H
	JP	NZ,INK_05

	LD	A,D
	AND	00011101B
	CALL	NZ,INK_01

INK_04:	LD	HL,KSTATE
INK_06:	BIT	7,(HL)
	JR	NZ,INK_07
	INC	HL
	DEC	(HL)
	DEC	HL
	JR	NZ,INK_07
	LD	(HL),0FFH
INK_07:	LD	A,L
	LD	HL,KSTATE+4
	CP	L
	JR	NZ,INK_06

	INC	E
	RET	Z	;NO KEY EXCLUDE SHIFTS

	LD	HL,TBL_KC-1-1	;"DEC E" & -1
	LD	D,0
	ADD	HL,DE
	LD	A,(HL)	;FETCH PSEUDO CODE

	LD	HL,KSTATE
	CP	(HL)
	JP	Z,INK_09		;na powtor
	EX	DE,HL
	LD	HL,KSTATE+4
	CP	(HL)
	JP	Z,INK_09	;na powtor
	BIT	7,(HL)
	JR	NZ,INK_08
	EX	DE,HL
	BIT	7,(HL)
	RET	Z		;ovidanie srabatywaniq za}ity ot drebezga otpuskanie

INK_08:	LD	(STACK),SP
	LD	(HL),A
	INC	HL
	LD	(HL),KDREBE
	INC	HL
	LD	(HL),REPDEL	;zagruzka s~et~ika do perwogo powtora
	INC	HL
	PUSH	HL
	CALL	DECODE	;OBTAIN CODES 00 .. FF
	POP	HL
	LD	(HL),A

INK_10:	CALL	PKBUF
	JR	Z,OVER_B

	CALL	SBEEP

	XOR	A
	LD	(REPSTP),A
END_KE:	LD	A,(KEYMOD)
	AND	01110111B	;RESET ANY GRAPH & EXT

INK_14:	LD	(KEYMOD),A
; In CP/M, the flashing cursor shape
; was corresponding to the key mode
; (caps/rus/graph/etc).
; The code that was removed here was updating
; the display cursor state - M.B. 
	RET

OVER_B:	LD	B,0
	LD	D,10
	JP	ZVUK

INK_09:	INC	HL
	LD	(HL),KDREBE
	INC	HL
	LD	A,(REPSTP)
	OR	A
	RET	NZ
	DEC	(HL)
	RET	NZ
	LD	(HL),REPPER
	INC	HL
	LD	A,(HL)
	JR	INK_10

SBEEP:	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL

	LD	B,2
	LD	D,56
	CALL	ZVUK

	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET

PKBUF:	LD	C,A
	LD	HL,USBUF
	LD	A,(HL)
	INC	A
	CP	LENBUF-1
	JR	NZ,PKBUF1
	XOR	A
PKBUF1:	DEC	HL
	CP	(HL)
	INC	HL
	RET	Z
	LD	E,(HL)
	LD	(HL),A
	LD	D,0
	LD	HL,BUFKLA
	ADD	HL,DE
	LD	(HL),C
	RET

;EXT KEYB
EXT_M:	LD	E,A
	ADD	A,A
	ADD	A,A
	LD	HL,KEYSHT
	OR	(HL)

	CP	11*4+0
	JP	Z,INS_C4	;ENTER

	CP	47*4+3		;^P
	JP	Z,LST_CO

	CP	10*4+1
	JP	Z,BREAK		;BREAK

	CP	1*4+2		;!
	JP	Z,RESET

	CP	10*4+0
	JP	Z,PAUSE

	BIT	0,(HL)
	JR	NZ,ERR_KE
	BIT	1,(HL)
	JR	NZ,ERR_KE

	CP	(9+1)*4
	JP	C,INS_C		;KEY 0-9

;GET MACRO STRING
;These are supposed to be macro keys in CP/M
;that put a string into the keyboard buffer
;Deactivated for this driver - fall through to
;error key - M.B.

ERR_KE:	LD	B,080H
	LD	D,60
	CALL	ZVUK

END_K1:	LD	SP,(STACK)	;WRONG KEY
	LD	A,0FFH
	LD	(REPSTP),A
	JP	END_KE

;INSERT CODE
INS_C:	LD	A,(TMP_CL)
	OR	A
	JR	NZ,INS_C1
	LD	(TMP_CO),A
	LD	A,3
INS_C1:	DEC	A
	LD	(TMP_CL),A
	INC	A
	LD	D,A

	LD	A,(TMP_CO)
	LD	C,A
	LD	B,10
	XOR	A
INS_C2:	ADD	A,C
	JR	NC,INS_C3
	XOR	A
	LD	(TMP_CL),A
	LD	(TMP_CO),A
	JP	ERR_KE

INS_C3:	DJNZ	INS_C2
	ADD	A,E
	LD	(TMP_CO),A

	DEC	D
	RET	Z

EXTSTY:	LD	SP,(STACK)
	JP	SBEEP

INS_C4:	CALL	SBEEP
	XOR	A
	LD	(TMP_CL),A
	LD	A,(TMP_CO)
	RET

; In CP/M, this was used to abort the
; running application and "Cold-boot"
; the BDOS, returning to the command
; prompt.
; In a standalone application, this
; could serve as some kind of mega
; abort key combination - M.B.
BREAK:	
	CALL	SBEEP
	JP	END_K1

;LIST ON/OFF
; In CP/M, this probably controlled
; console to printer routing - M.B.
LST_CO:	
	CALL	SBEEP
	JP	END_K1

; In CP/M, this was a hard pause,
; freezing any running application
PAUSE:	
	JR	EXTSTY

; In CP/M, this key combination was
; causing a software system reset
RESET:	
	JP	END_K1


DECODE:	LD	HL,KEYMOD
	BIT	7,(HL)
	JP	NZ,EXT_M

	BIT	5,A
	JP	NZ,DECO_1

	ADD	A,A
	ADD	A,A
	LD	HL,KEYSHT
	OR	(HL)
	LD	C,A
	LD	B,0
	LD	HL,TBL_DG
	ADD	HL,BC
	LD	A,(HL)
	CP	80H
	RET	C

	CP	0C0H
	JP	Z,CLBUF		;CLEAR BUFFER

	SUB	0F0H	;CONTROLS
	LD	L,A
	ADD	A,A
	ADD	A,L
	LD	L,A
	LD	H,0
	LD	DE,TBL_CT
	ADD	HL,DE

	LD	B,20
	LD	D,20
	CALL	ZVUK

	LD	SP,(STACK)

	LD	A,0FFH
	LD	(REPSTP),A

	LD	A,(KEYMOD)
	XOR	(HL)
	INC	HL
	AND	(HL)
	INC	HL
	OR	(HL)
	JP	INK_14

DECO_1:	AND	00011111B
	LD	E,A
	LD	A,(KEYSHT)
	OR	A
	JR	Z,DECO_2
	DEC	A
	SCF
	JR	Z,DECO_2
	DEC	A
	LD	HL,TBL_SS
	LD	C,E
	JR	Z,DECO_4
	LD	A,E
	INC	A
	RET

DECO_2:	LD	A,(KEYMOD)
	LD	D,A
	ADC	A,0
	AND	00000001B
	ADD	A,E
	ADD	A,E
	LD	C,A
	BIT	3,D
	LD	HL,TBL_CG
	JR	NZ,DECO_4
	BIT	2,D
	LD	HL,TBL_G
	JR	NZ,DECO_4
	BIT	1,D
	JR	NZ,DECO_6
	BIT	0,C
	LD	A,'A'
	JR	NZ,DECO_5
	LD	A,'a'
DECO_5:	ADD	A,E
	RET

DECO_6:	LD	HL,TBL_RU
	LD	D,0
	ADD	HL,DE
	LD	A,(HL)
	BIT	0,C
	RET	NZ
	ADD	A,20H
	CP	0B0H	;a RUS
	RET	C
	ADD	A,30H
	RET

DECO_4:	LD	B,0
	ADD	HL,BC
	LD	A,(HL)
	RET

CLBUF:	LD	SP,(STACK)

	LD	A,0FFH
	LD	(REPSTP),A
	LD	A,(USBUF)
	LD	(ULBUF),A

	LD	B,80
	LD	D,40
	JP	ZVUK

ZVUK:	LD	A,(BORDER)
	XOR	10H
ZVUK1:	OUT	(0FEH),A
	LD	E,D
ZVUK0:	DEC	E
	JR	NZ,ZVUK0
	XOR	10H
	DJNZ	ZVUK1
	RET

;00 .. 09 - DIGITS
;10       - SPACE
;11       - ENTER
;32 .. 57 - LETTERS
TBL_KC:	DEFB	33,39,56,06	;BHY6
	DEFB	05,51,38,53	;5TGV
	DEFB	45,41,52,07	;NJU7
	DEFB	04,49,37,34	;4RFC
	DEFB	44,42,40,08	;MKI8
	DEFB	03,36,35,55	;3EDX
	DEFB	00,43,46,09	; LO9
	DEFB	02,54,50,57	;2WSZ
	DEFB	10,11,47,00 ;SP,EN,P0
	DEFB	01,48,32	;1QA

;	  	   XOR	     AND       OR
TBL_CT:	DEFB	00000001B,11111111B,00000000B	;F0 CAPS LOCK
	DEFB	00000010B,11111111B,00000000B	;F1 RUS LOCK
	DEFB	00000100B,11111111B,00000000B	;F2 GRAPH
	DEFB	00001000B,11111111B,00000000B	;F3 EXT GRAPH
	DEFB	00000000B,11001111B,00100000B	;F4 KOI7 0+1 (ENGL-RUS)
	DEFB	00000000B,11001111B,00110000B	;F5 KOI7 0/1 (KOI8)
	DEFB	00000000B,11001111B,00000000B	;F6 IBM ALT
	DEFB	00000000B,10111111B,01000000B	;F7 40 KEYS (ZX Spectrum 48)
	DEFB	00000000B,10111111B,00000000B	;F8 58 KEYS (ZX Spectrum +2)
	DEFB	00000000B,11111111B,10000000B	;F9 EXT. COMMAND
						;C0 CLEAR BUFFER
;		STD  CS   SS  CTRL
	IF	SYSKEY = 0	;40
TBL_DG:	 DEFB	'0',07FH, '_',0F9H
	 DEFB	'1',01BH, '!',  0
	 DEFB	'2',0F0H, '@',0F4H
	 DEFB	'3',0F1H, '#',0F5H
	 DEFB	'4',0F3H, '$',0F6H
	 DEFB	'5',008H, '%',  0
	 DEFB	'6',01AH, '&',  0
	 DEFB	'7',019H, "'",  0
	 DEFB	'8',018H, '(',  0
	 DEFB	'9',0F2H, ')',0F3H
	 DEFB	' ',003H,009H,0C0H
	 DEFB	0DH,00AH,01FH,0C0H
	ENDIF

	IF	SYSKEY = 1	;58
TBL_DG:	 DEFB	'0',07FH, '_',01FH
	 DEFB	'1',0F1H, '!',009H
	 DEFB	'2',0F0H, '@',0F4H
	 DEFB	'3',01BH, '#',0F5H
	 DEFB	'4',0F9H, '$',0F6H
	 DEFB	'5',008H, '%',  0
	 DEFB	'6',01AH, '&',  0
	 DEFB	'7',019H, "'",  0
	 DEFB	'8',018H, '(',  0
	 DEFB	'9',0F3H, ')',0F2H
	 DEFB	' ',003H,0C0H,  0
	 DEFB	0DH,00AH,  0 ,  0
	ENDIF

TBL_SS:	DEFB	'~'	;A
	DEFB	'*'	;B
	DEFB	'?'	;C
	DEFB	99	;D was '\'
	DEFB	01EH	;E
	DEFB	'{'	;F
	DEFB	'}'	;G
	DEFB	'^'	;H
	DEFB	000H	;I
	DEFB	'-'	;J
	DEFB	'+'	;K
	DEFB	'='	;L
	DEFB	'.'	;M
	DEFB	','	;N
	DEFB	';'	;O
	DEFB	'"'	;P
	DEFB	01DH	;Q
	DEFB	'<'	;R
	DEFB	'|'	;S
	DEFB	'>'	;T
	DEFB	']'	;U
	DEFB	'/'	;V
	DEFB	01CH	;W
	DEFB	'`'	;X
	DEFB	'['	;Y
	DEFB	':'	;Z

TBL_RU:	DEFB	'ФИСВУАПР'	;A-H
	DEFB	'ШОЛДЬТЩЗ'	;I-P
	DEFB	'ЙКЫЕГМЦЧ'	;Q-X
	DEFB	'НЯ'		;Y-Z

TBL_CG:	DEFB	'··'	;A
	DEFB	'■■'	;B
	DEFB	'ЄЄ'	;C
	DEFB	'¤¤'	;D
	DEFB	'°°'	;E
	DEFB	'ЎЎ'	;F
	DEFB	'ўў'	;G
	DEFB	'∙∙'	;H
	DEFB	'■■'	;I
	DEFB	'ЎЎ'	;J
	DEFB	'жЖ'	;K
	DEFB	'эЭ'	;L
	DEFB	'юЮ'	;M
	DEFB	'бБ'	;N
	DEFB	'хХ'	;O
	DEFB	'ъЪ'	;P
	DEFB	'√√'	;Q
	DEFB	'її'	;R
	DEFB	'ўў'	;S
	DEFB	'ёЁ'	;T
	DEFB	'¤¤'	;U
	DEFB	'№№'	;V
	DEFB	'ЇЇ'	;W
	DEFB	'∙∙'	;X
	DEFB	'°°'	;Y
	DEFB	'єє'	;Z

TBL_G:	DEFB	'│║'	;A
	DEFB	'╧╨'	;B
	DEFB	'┘╝'	;C
	DEFB	'┼╬'	;D
	DEFB	'┬╦'	;E
	DEFB	'┤╣'	;F
	DEFB	'╞╟'	;G
	DEFB	'╪╫'	;H
	DEFB	'░░'	;I
	DEFB	'╡╢'	;J
	DEFB	'▌▐'	;K
	DEFB	'▄▀'	;L
	DEFB	'█ '	;M	SPACE=255
	DEFB	'╛╜'	;N
	DEFB	'▒▒'	;O
	DEFB	'▓▓'	;P
	DEFB	'─═'	;Q
	DEFB	'┐╗'	;R
	DEFB	'├╠'	;S
	DEFB	'╒╓'	;T
	DEFB	'╕╖'	;U
	DEFB	'╘╙'	;V
	DEFB	'┌╔'	;W
	DEFB	'┴╩'	;X
	DEFB	'╤╥'	;Y
	DEFB	'└╚'	;Z

KSTATE:	DEFB	0FFH	;KEY CODE
	DEFB	0
	DEFB	0	;REPPER s~et~ik
	DEFB	0	;kod s u~etom MODE

	DEFB	0FFH	;kod
	DEFB	0
	DEFB	0	;REPPER s~et~ik
	DEFB	0	;kod s u~etom MODE

REPSTP:	DEFB	0		;FF - STOP REPEART

;BIT 0 =1 CAPS LOCK
;BIT 1 =1 RUS LOCK
;BIT 2 =1 GRAPH         |-FOR IBM RUS
;BIT 3 =1 CTRL GRAPH    |/
;BIT 4 =1 KOI7 0+1 LOCK |0-IBM RUS
;BIT 5 =1 KOI7 0/1 LOCK	|0/
;BIT 6 =1 40 Keys
;BIT 7 =1 EXTEND
KEYMOD:	DEFB	01000000B	;KEEP THIS TWO VARS CLOSE TOGETHER
KEYSHT:	DEFB	00000000B	;COPY OF SHIFT BYTE

TMP_CL:	DEFB	0
TMP_CO:	DEFB	0

STACK:	DEFS	2

BUFKLA:	DEFS	LENBUF
ULBUF:	DB	0
USBUF:	DB	0
BORDER:	DEFB	0


	ENDMODULE