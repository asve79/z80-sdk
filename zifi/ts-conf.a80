		module zifi

;------------------------------------------------------------------------------------
;Сервисные ф-ции
;------------------------------------------------------------------------------------
;Принять ответ от модуля и проанализировать статус выполнения команды
;i:
; HL - bufer
;o: A=0 - ok A=1 - ERROR
wait_status	DI
		PUSH	BC
		PUSH	DE
		PUSH	HL
		LD	(ptr),HL
		DEC	HL
		LD	BC,0000				;Счетчик
ws2;		PUSH	BC
;		PUSH	DE
;		PUSH	HL
;		_hl_hex
;		PUSH	BC
;		POP	HL
;		_hl_hex
;		LD	A,13
;		_printc
;		POP	HL
;		POP	DE
;		POP	BC

		CALL	uart_ts_zifi.rx_fifo_cnt
		OR	A
		JR	Z,ws2				;wait data
;		LD	A,"r"
;		_printc
		CALL	uart_ts_zifi.read_fifo_byte	;read byte
		LD	(HL),A
;		PUSH	AF
;		_printc
;		POP	AF
		INC	HL
		INC	BC
		CP	10				;if end-of-line (code 13)
		JR	NZ,ws2				;
		PUSH	HL
		PUSH	BC
wc4		LD	DE,msg_ok			;а тут проверяем статус
		LD	BC,5
		CALL	check_status
		OR	A
		JR	NZ,ws7				;Вернуться со статусов А=0 что есть найдено "ОК"
		LD	DE,msg_error
		LD	BC,8
		CALL	check_status
		OR	A
		JR	NZ,ws6				;Вернуться со статусом в А=1 что есть найдена "ERROR"
		POP	BC
		POP	HL				;Продолжаем принимать данные
		DEC	HL
		LD	(ptr),HL
		INC	HL
		JR	ws2
ws7		POP	BC
		POP	HL
		XOR	A				;ОК
		JR	ws8
ws6		POP	BC
		POP	HL
		LD	A,1				;ERROR
ws8		POP	HL
		POP	DE
		POP	BC
		EI
		RET
;i:
; (ptr) - буфер
; DL - с чем сравниваем
; BC - сколько симовлов сравниваем
;o:
; A:
; 0 - не найдено
; 1 - найдено
check_status	PUSH	HL
		LD	HL,(ptr)
;		PUSH	HL
;		PUSH	DE
;		PUSH	BC
;		LD	A,'E'
;		_printc
;		POP	BC
;		POP	DE
;		POP	HL
cstat_loop	;PUSH	HL
;		PUSH	DE
;		PUSH	BC
;		LD	A,">"
;		_printc
;		LD	A,(HL)
;		_a_hex
;		LD	A,(DE)
;		_a_hex
;		LD	A,"<"
;		_printc
;		POP	BC
;		POP	DE
;		POP	HL
		LD	A,(DE)
		CPI
		JNZ	cstat_nf
		INC	DE
		INC	C
		DEC	C
		JR	NZ,cstat_loop
		LD	A,1
;		PUSH	AF
;		_a_hex
;		LD	A,"*"
;		_printc
;		POP	AF
;		PUSH	HL
;		PUSH	DE
;		PUSH	BC
;		LD	A,'L'
;		_printc
;		POP	BC
;		POP	DE
;		POP	HL

		POP	HL
		RET
cstat_nf	XOR	A
;		PUSH	AF
;		_a_hex
;		LD	A,"*"
;		_printc
;		POP	AF
;		PUSH	HL
;		PUSH	DE
;		PUSH	BC
;		LD	A,'l'
;		_printc
;		POP	BC
;		POP	DE
;		POP	HL


		POP	HL
		RET

msg_ok		DB	10,'OK',13,10
msg_error	DB	10,'ERROR',13,10
ptr		DW	0		;Указатель на начало проверяемого блока
connections	DB	0		;кол-во открытых соединений
registry	DS	5*9,0		;Реестр с форматом <id><адрес_буфреа><максимальный размер буфера>

;http://wikiti.brandonw.net/index.php?title=Z80_Routines:Other:DispHL
;Number in de to decimal ASCII on HL
;Thanks to z80 Bits
;inputs:
; de = number
; hl = bufer to write
;example: hl=300 outputs '00300'
;destroys: af, bc, hl, de used
de_dec_hl
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	EX	HL,DE
	ld	bc,-10000
	CALL	Num1
	ld	bc,-1000
	CALL	Num1
	ld	bc,-100
	CALL	Num1
	ld	c,-10
	CALL	Num1
	ld	c,-1
Num1:	ld	a,'0'-1
Num2:	inc	a
	add	hl,bc
	jr	c,Num2
	sbc	hl,bc
	EX	DE,HL
	LD	(HL),A
	INC	HL
	EX	DE,HL
	POP	HL
	POP	DE
	POP	DE
	POP	AF
	RET

;Отправить команду
;i: HL - command
send_cmd	LD	A,(HL)
		OR	A
		RET	Z
		CALL	uart_ts_zifi.send_fifo_byte
		PUSH 	HL
		LD	A,(HL)
		_printc
		POP	HL
		INC	HL
		JR	send_cmd

;------------------------------------------------------------------------------------
;o:
; A=0 - OK
; A=1 - ERROR
init		PUSH	HL
		CALL	uart_ts_zifi.init
		OR	A
		POP	HL
		RET	NZ
		PUSH	HL
		LD	HL,cmd_check		;Просто получить OK от модуля
		CALL	send_cmd
		POP	HL
		CALL	wait_status
		PUSH	HL
		LD	HL,cmd_cipmux		;Множественное соединение
		CALL	send_cmd
		POP	HL
		CALL	wait_status
		PUSH	HL
		LD	HL,cmd_cipmode
		CALL	send_cmd
		POP	HL
		JP	wait_status


;------------------------------------------------------------------------------------
;i : HL - буфер для операций
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
list_ap		PUSH	HL
		LD	HL,cmd_cwlap
		CALL	send_cmd
		POP	HL
		JP	wait_status

;-- Показать текущий IP -------------------------------------------------------------
;i : HL - буфер для операций
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
current_ip	PUSH	HL
		LD	HL,cmd_cifsr
		CALL	send_cmd
		POP	HL
		JP	wait_status

;-- Подключиться к AP ---------------------------------------------------------------
;i : HL - буфер для операций
;  : DE - ssid,0,pass,0
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
connect_ap	PUSH 	HL
		EX 	DE,HL
		PUSH	HL
		LD	HL,cmd_cwjap		;копируем команду AT+CWJAP="
		LD	BC,10
		LDIR
		POP	HL			;HL=<ssid>,0,<pass>,0
cap1		LDI				;Копируем SSID
		LD	A,(HL)
		OR	A
		JR	NZ,cap1
		INC	HL
		PUSH	HL
		LD	HL,cmd_quetesp		;копируеем разделитьель ","
		LD	BC,3
		LDIR
		POP	HL			;HL=<pass>,0
cap2		LDI				;Копируем пароль
		LD	A,(HL)
		OR	A
		JR	NZ,cap2
		LD	HL,cmd_quetesend	;копируем завершающую строку ",13,10,0
		LD	BC,4
		LDIR
		POP	HL
		CALL	send_cmd
		JP	wait_status


;--- отключиться от точки доступа ---------------------------------------------------
;i : HL - буфер для операций
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
disconnect_ap	PUSH	HL
		LD	HL,cmd_cwqap
		CALL	send_cmd
		POP	HL
		JP	wait_status


;-- открыть TCP соединение ----------------------------------------------------------
;i : HL - буфер для операций.
;  : DE - address,0,port,0
;  : DE` - адрес приемного буфера для данного канала. Адреc будет зарегистрирован в реестре. При входящие данных по данному дескриптору будут отправляться в этот буфер
;  : BC - максимальный размер буфера
;o : HL - указатель на сообщение
;  :  A - 0-9 - Connection ID, #FF - ERROR
;+CIPSTART: (id), (<тип>), (<ip>), (<порт>)
;AT+CIPSTART=1, "TCP", "192.168.101.100", 1000
open_tcp	PUSH	HL
		LD	A,1		;TODO : получать дескриптор динамически. Пока 1 как заглушка
		LD	HL,registry	;Записать в registry идентификатор и адрес буфера в который будут записаны данные
		LD	(HL),A
		INC 	HL
		PUSH	HL
		EXX
		POP	HL
		LD	(HL),E
		INC	HL
		LD	(HL),D
		PUSH	HL
		EXX
		POP	HL
		INC	HL
		LD	(HL),C
		INC	HL
		LD	(HL),B
		POP	HL
		PUSH	HL		;----------------- работаем
		PUSH	DE
		EX 	DE,HL		;HL=<host>,0,<port>,0
		PUSH	HL
		LD	HL,cmd_cipstart	;копируем команду AT+CIPSTART="
		LD	BC,12
		LDIR
		LD	A,'1'		;!!!!!!!!!!!!DUMMY!!!!!!!!!!11
		LD	(DE),A
		INC	DE
		LD	HL,cmd_quetesp+1  ;копируеем разделитьель ',"'
		LD	BC,2
		LDIR
		LD	HL,cmd_tcp	;копируем строку TCP","
		LD	BC,6
		LDIR
		POP	HL			;HL=<host>,0,<port>,0
ot1		LDI				;Копируем SSID
		LD	A,(HL)
		OR	A
		JR	NZ,ot1
		INC	HL
		PUSH	HL
		LD	HL,cmd_quetesp		;копируеем разделитьель '",'
		LD	BC,2
		LDIR
		POP	HL			;HL=<port>,0
ot2		LDI				;Копируем порт
		LD	A,(HL)
		OR	A
		JR	NZ,ot2
		LD	HL,cmd_quetesend+1	;копируем завершающую строку 13,10,0
		LD	BC,3
		LDIR
		POP	DE
		POP	HL
		CALL	send_cmd

;		POP	DE
;		POP	HL
		CALL	wait_status
		;* TODO получать идентификатор
		OR	A
		JR	NZ,oterr
		LD	A,1			;DUMMY
						;тут надо получать идентификатор
		RET
oterr		LD	A,#FF			;ERROR
		RET

;-- Закрыть TCP соединение ----------------------------------------------------------
;i : HL - буфер для операций
;  : A - <ID>
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
;AT+CIPCLOSE=<id>
close_tcp	PUSH	HL
		EX 	DE,HL
		LD	HL,cmd_close	;копируем команду AT+CIPCLOSE=
		LD	BC,12
		LDIR
		ADD	'0'
		LD	(DE),A		;вставлем идентификатор соединения
		INC	DE
		LD	HL,cmd_quetesend+1	;копируем завершающую строку 13,10,0
		LD	BC,3
		LDIR
		POP	HL
		CALL	send_cmd
		JP	wait_status

;-- PING адреса ---------------------------------------------------------------------
;i : HL - буфер для операций
;  : DE - addr,0
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
;AT+PING="192.168.1.1"
;AT+PING="www.ya.ru"
ping		PUSH 	HL
		PUSH	DE
		PUSH	HL
		EX 	DE,HL
		PUSH	HL
		LD	HL,cmd_ping		;копируем команду AT+PING="
		LD	BC,9
		LDIR
		POP	HL			;HL=<ardr>,0
ping1		LDI				;Копируем адрес
		LD	A,(HL)
		OR	A
		JR	NZ,ping1
		INC	HL
		LD	HL,cmd_quetesend		;;копируем завершающую строку ",13,10,0
		LD	BC,4
		LDIR
		POP	HL
		CALL	send_cmd
		POP	DE
		POP	HL
		JP	wait_status

;-- Отправить данные ----------------------------------------------------------------
;i : HL - буфер для операций.
;  : DE - буфер с данными
;  : A - <ID>
;  : BC - размер
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
;AT+CIPSEND=<id>, <размер> <данные>
send		PUSH	HL
		PUSH	DE
		EX 	DE,HL
		PUSH	HL
		LD	HL,cmd_cipsend	;копируем команду AT+CIPSEND=
		LD	BC,11
		LDIR
		ADD	'0'
		LD	(HL),A		;вставлем идентификатор соединения
		INC	HL
		LD	A,','		;вставить запятую
		LD	(HL),A
		INC	HL
		PUSH	BC
		POP	HL
		PUSH	DE
		PUSH 	BC
		POP	DE
		CALL	de_dec_hl		;напечатать в буфер размер
		POP	DE
		POP	HL
		CALL	send_cmd
		POP	DE
		POP	HL
		PUSH	HL
		PUSH	DE
send1		LD	A,(DE)		;Отправить <BC> байт в порт
		CALL	uart_ts_zifi.send_fifo_byte
		INC	DE
		DEC	BC
		LD	A,C
		OR	A
		JR	NZ,send1
		LD	A,B
		OR	A
		JR	NZ,send1
		POP	DE
		POP	HL
		JP	wait_status

;-- Принять данные ------------------------------------------------------------------
;i : HL - буфер для операций.
;o : HL - указатель на сообщение
;  :  A - 0 - OK, 1- ERROR
;AT+IPD
receve		PUSH	HL
		LD	HL,cmd_ipd	;копируем команду AT+IPD,13,10,0
		LD	BC,11
		LDIR

		POP	HL
		RET



		include	"commands.a80"
		include "../sockets/uart_ts_zifi.a80"
		endmodule
