	module uart_zifi


cmd_clear_input_fifo    equ 1
cmd_clear_output_fifo   equ 2

zifi_command_reg                equ #C7EF
zifi_error_reg                  equ #C7EF
zifi_data_reg                   equ #BFEF
zifi_input_fifo_status          equ #C0EF
zifi_output_fifo_status         equ #C1EF


input_fifo_status
	PUSH	BC
	LD	BC,zifi_input_fifo_status
	IN	A,(c)
	POP	BC
	RET

output_fifo_status
	PUSH	BC
	LD	BC,zifi_output_fifo_status
	IN	A,(c)
	POP	BC
	RET

init_zifi
	PUSH	BC
	PUSH	DE
	ld      bc,#c7ef
	ld      de,#fff1
	out     (c),e           ;Set API mode 1
	out     (c),d           ;Get Version
	in      a,(c)
	cp      #ff
	jp      z,nozifi
	ld      a,#01
	out     (c),a           ;Clear RX FIFO
	POP	DE
	POP	BC
	xor	A
	RET
nozifi	LD	A,1
	POP	DE
	POP	BC
	RET

zifi_input_fifo_check
        ld bc,zifi_input_fifo_status    ; ждём прихода данных в фифо
        ld e,0
3       in a,(c)
        or a                            ; 0 - input FIFO is empty,
        ret nz
error   ld a,2
        out (#fe),a
        ret


clear_output_fifo       ld	a,cmd_clear_output_fifo
                        call 	zifi_out_command
check_output_fifo_status
                        ld	bc,zifi_output_fifo_status
cofs                    in	a,(c)
                        or	a
                        jr	z,cofs               	;0 - output FIFO is full
                        ret

clear_input_fifo        ld	a,cmd_clear_input_fifo
                        call	zifi_out_command
                        ld	bc,zifi_input_fifo_status
clear_input_fifo1       in	a,(c)
                        or	a
                        jr	nz,clear_input_fifo1         ;0 - input FIFO is empty
                        ret

zifi_out_command        ld	bc,zifi_command_reg
                        out	(c),a
                        ret

zifi_command_result     ld	bc,zifi_error_reg
                        in	a,(c)
                        ret

zifi_send_byte  push	AF
		call 	check_output_fifo_status
                call 	clear_output_fifo
                        
                ld 	bc,zifi_data_reg
                POP	AF
                out 	(c),a
                RET

read_fifo_char  ld bc,zifi_input_fifo_status    ; ждём прихода данных в фифо
3               in a,(c)
		jr z,3b                         ; 0 - input FIFO is empty,
		ld b,0
		in a,(c)
		ret



	endmodule

